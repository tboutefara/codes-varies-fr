/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tarekboutefara.nbplatform.helloworldhistory;

import com.tarekboutefara.nbplatform.helloworldmodel.HelloWorldMessage;
import java.util.Collection;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.tarekboutefara.nbplatform.helloworldhistory//HelloWorldHistory//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "HelloWorldHistoryTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "com.tarekboutefara.nbplatform.helloworldhistory.HelloWorldHistoryTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_HelloWorldHistoryAction",
        preferredID = "HelloWorldHistoryTopComponent"
)
@Messages({
    "CTL_HelloWorldHistoryAction=HelloWorldHistory",
    "CTL_HelloWorldHistoryTopComponent=HelloWorldHistory Window",
    "HINT_HelloWorldHistoryTopComponent=This is a HelloWorldHistory window"
})
public final class HelloWorldHistoryTopComponent extends TopComponent implements LookupListener {

    private org.openide.util.Lookup.Result<HelloWorldMessage> result;
    
    public HelloWorldHistoryTopComponent() {
        initComponents();
        setName(Bundle.CTL_HelloWorldHistoryTopComponent());
        setToolTipText(Bundle.HINT_HelloWorldHistoryTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaNames = new javax.swing.JTextArea();

        areaNames.setColumns(20);
        areaNames.setRows(5);
        jScrollPane1.setViewportView(areaNames);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaNames;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void componentOpened() {
        result = org.openide.util.Utilities.actionsGlobalContext().lookupResult(HelloWorldMessage.class);
        result.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent arg0) {
        Collection<? extends HelloWorldMessage> messages = result.allInstances();
        StringBuilder sb = new StringBuilder();
        for (HelloWorldMessage message : messages) {
            sb.append(message.getName()).append(" (").append(message.getDate().toString()).append(")\n");
        }
        areaNames.setText(sb.toString());
    }
}
